apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-x-minikube-postgres
spec:
  # Tell controller that this PV belongs to the "manual" StorageClass
  # The existence of "manual" `StorageClass` resource in itself is not
  # necessary, as long as the subsequent PVC also specify "manual"
  # on its `storageClassName` configuration so it will be bind with
  # this PV
  #
  # Reference
  #
  # From: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#class-1
  # A claim can request a particular class by specifying the name of a StorageClass
  # using the attribute "storageClassName". Only PVs with the same "storageClassName" as the PVC
  # can be bound to the PVC.
  #
  # PVCs don't necessarily have to request a class.
  # A PVC with its "storageClassName" set equal to "" is always interpreted
  # to be requesting a PV with no class so it can only be bound to
  # PVs with no class (CAN BE NO ANNOTATIONS or one set equal to "")
  #
  # HOWEVER, PVC with no "storageClassName" is not quite the same and is treated differently by the cluster
  # depending on whether the DefaultStorageClass admission plugin is turned on.  if default StorageClass is set
  # PVC with no "storageClassName" will use dynamic provisioning instead. See docs for detailed behaviors
  storageClassName: manual
  capacity:
    storage: 2Gi
  # Remember Kubernetes uses volume access modes to match PersistentVolumeClaims and PersistentVolumes
  # So likely you need to match this configuration with your PVC
  #
  # the volume can be mounted as read-write by a single node.
  # ReadWriteOnce access mode still can allow multiple pods to access
  # (read from or write to) that volume when the pods are running on the same node.
  accessModes:
    - ReadWriteOnce
  # Minikube-specific
  # https://minikube.sigs.k8s.io/docs/handbook/persistent_volumes/
  # minikube supports PersistentVolumes of type hostPath out of the box
  # Data stored in "/data/*"" path will be persisted upon Minikube cluster restarts
  hostPath:
    path: /data/pv-x-minikube-postgres
  # For production configuration you likely want to consult `csi`
  # and consult
